{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["interfaces.ts"],"names":[],"mappings":";AAoCA,MAAM,UAAU,cAAc,CAAC,SAAoB;IACjD,OAAO;QACL,UAAU,EAAE,SAAS,KAAK,YAAY;QACtC,QAAQ,EAAE,SAAS,KAAK,UAAU;KACnC,CAAA;AACH,CAAC;AAcD,MAAM,UAAU,cAAc,CAAC,QAAmB;IAChD,OAAO;QACL,GAAG,EAAE,QAAQ,KAAK,KAAK;QACvB,MAAM,EAAE,QAAQ,KAAK,QAAQ;QAC7B,IAAI,EAAE,QAAQ,KAAK,MAAM;QACzB,KAAK,EAAE,QAAQ,KAAK,OAAO;QAC3B,OAAO,EAAE,QAAQ,KAAK,SAAS;QAC/B,QAAQ,EAAE,QAAQ,KAAK,UAAU;QACjC,UAAU,EAAE,QAAQ,KAAK,YAAY;QACrC,WAAW,EAAE,QAAQ,KAAK,aAAa;KACxC,CAAA;AACH,CAAC;AAYD,MAAM,CAAC,IAAM,iBAAiB;IAC5B,GAAC,SAAS,IAAG,iBAAiB;IAC9B,GAAC,UAAU,IAAG,kBAAkB;IAChC,GAAC,UAAU,IAAG,kBAAkB;IAChC,GAAC,YAAY,IAAG,oBAAoB;IACpC,GAAC,mBAAmB,IAAG,2BAA2B;IAClD,GAAC,qBAAqB,IAAG,6BAA6B;OACvD,CAAA","sourcesContent":["export interface WithRequiredId {\n  id: string\n}\n\nexport interface WithOptionalId {\n  id?: string\n}\n\nexport interface WithBlock {\n  block?: boolean\n}\n\nexport interface WithActionState {\n  loading?: boolean\n  error?: boolean\n}\n\nexport type FixedHeightItemSize = 'lg' | 'md' | 'sm' | 'xs'\nexport interface WithFixedHeightItemSize {\n  size: FixedHeightItemSize\n}\n\nexport type LayoutSpacing =\n  | 'extraRelaxed'\n  | 'relaxed'\n  | 'normal'\n  | 'tight'\n  | 'extraTight'\nexport interface WithLayoutSpacing {\n  spacing: LayoutSpacing\n}\n\nexport type Direction = 'horizontal' | 'vertical'\nexport interface WithDirection {\n  direction?: Direction\n}\nexport function parseDirection(direction: Direction) {\n  return {\n    horizontal: direction === 'horizontal',\n    vertical: direction === 'vertical',\n  }\n}\n\nexport type Placement =\n  | 'top'\n  | 'bottom'\n  | 'left'\n  | 'right'\n  | 'topLeft'\n  | 'topRight'\n  | 'bottomLeft'\n  | 'bottomRight'\nexport interface WithPlacement {\n  position?: Placement\n}\nexport function parsePlacement(position: Placement) {\n  return {\n    top: position === 'top',\n    bottom: position === 'bottom',\n    left: position === 'left',\n    right: position === 'right',\n    topLeft: position === 'topLeft',\n    topRight: position === 'topRight',\n    bottomLeft: position === 'bottomLeft',\n    bottomRight: position === 'bottomRight',\n  }\n}\n\nexport interface WithFormControl {\n  width?: string\n  value?: any\n  error?: boolean\n  errorMessage?: string\n  disabled?: boolean\n  readOnly?: boolean\n  onChange?: (value: any) => any\n}\n\nexport const AnimationClassMap = {\n  ['fade-in']: 'animate-fade-in',\n  ['fade-out']: 'animate-fade-out',\n  ['slide-up']: 'animate-slide-up',\n  ['slide-down']: 'animate-slide-down',\n  ['centered-slide-up']: 'animate-centered-slide-up',\n  ['centered-slide-down']: 'animate-centered-slide-down',\n}\n\nexport type AnimationType = 'fade-in' | 'slide-up' | 'slide-down' | 'centered-slide-up' | 'centered-slide-down'\n\n"]}