{"version":3,"file":"useReveal.js","sourceRoot":"","sources":["useReveal.ts"],"names":[],"mappings":"AAAA,OAAO,EAAa,WAAW,EAAE,MAAM,OAAO,CAAA;AAC9C,OAAO,EAAE,iBAAiB,EAAiB,MAAM,sBAAsB,CAAA;AAGvE,MAAM,CAAC,OAAO,UAAU,SAAS,CAC/B,GAA2B,EAC3B,IAAoB,EACpB,IAAoB;IAEpB,IAAM,KAAK,GAAG,WAAW,CAAC;;QACxB,IAAM,QAAQ,GAAG,MAAA,GAAG,CAAC,OAAO,0CAAE,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;QAC1D,IAAI,QAAQ,EAAE,CAAC;YACb,MAAA,GAAG,CAAC,OAAO,0CAAE,gBAAgB,CAC3B,cAAc,EACd;;gBACE,MAAA,GAAG,CAAC,OAAO,0CAAE,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,SAAS,CAAC,CAAC,CAAA;YACrE,CAAC,EACD,EAAE,IAAI,EAAE,IAAI,EAAE,CACf,CAAA;YACD,MAAA,GAAG,CAAC,OAAO,0CAAE,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,SAAS,CAAC,CAAC,CAAA;YAChE,MAAA,GAAG,CAAC,OAAO,0CAAE,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;QACzC,CAAC;IACH,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAA;IAEf,IAAM,KAAK,GAAG,WAAW,CAAC;;QACxB,IAAM,QAAQ,GAAG,MAAA,GAAG,CAAC,OAAO,0CAAE,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;QAC1D,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,MAAA,GAAG,CAAC,OAAO,0CAAE,gBAAgB,CAC3B,cAAc,EACd;;gBACE,MAAA,GAAG,CAAC,OAAO,0CAAE,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;gBACpC,MAAA,GAAG,CAAC,OAAO,0CAAE,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,UAAU,CAAC,CAAC,CAAA;YACtE,CAAC,EACD,EAAE,IAAI,EAAE,IAAI,EAAE,CACf,CAAA;YACD,MAAA,GAAG,CAAC,OAAO,0CAAE,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,UAAU,CAAC,CAAC,CAAA;QACnE,CAAC;IACH,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;IAET,IAAM,MAAM,GAAG,WAAW,CAAC;;QACzB,IAAM,QAAQ,GAAG,MAAA,GAAG,CAAC,OAAO,0CAAE,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;QAC1D,IAAG,QAAQ,EAAC,CAAC;YACX,KAAK,EAAE,CAAA;QACT,CAAC;aAAI,CAAC;YACJ,KAAK,EAAE,CAAA;QACT,CAAC;IACH,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;IAEhB,OAAO,EAAE,IAAI,EAAC,KAAK,EAAE,IAAI,EAAC,KAAK,EAAE,MAAM,QAAA,EAAE,CAAA;AAC3C,CAAC","sourcesContent":["import { RefObject, useCallback } from 'react'\nimport { AnimationClassMap, AnimationType } from '../shared/interfaces'\n\n\nexport default function useReveal(\n  ref: RefObject<HTMLElement>,\n  show?: AnimationType,\n  hide?: AnimationType\n) {\n  const _show = useCallback(() => {\n    const isHidden = ref.current?.classList.contains('hidden')\n    if (isHidden) {\n      ref.current?.addEventListener(\n        'animationend',\n        () => {\n          ref.current?.classList.remove(AnimationClassMap[show ?? 'fade-in'])\n        },\n        { once: true }\n      )\n      ref.current?.classList.add(AnimationClassMap[show ?? 'fade-in'])\n      ref.current?.classList.remove('hidden')\n    }\n  }, [ref, show])\n\n  const _hide = useCallback(() => {\n    const isHidden = ref.current?.classList.contains('hidden')\n    if (!isHidden) {\n      ref.current?.addEventListener(\n        'animationend',\n        () => {\n          ref.current?.classList.add('hidden')\n          ref.current?.classList.remove(AnimationClassMap[hide ?? 'fade-out'])\n        },\n        { once: true }\n      )\n      ref.current?.classList.add(AnimationClassMap[hide ?? 'fade-out'])\n    }\n  }, [ref])\n\n  const toggle = useCallback(()=>{\n    const isHidden = ref.current?.classList.contains('hidden')\n    if(isHidden){\n      _show()\n    }else{\n      _hide()\n    }\n  }, [show, hide])\n\n  return { show:_show, hide:_hide, toggle }\n}\n"]}