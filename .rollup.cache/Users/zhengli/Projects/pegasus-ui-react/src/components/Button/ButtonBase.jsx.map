{"version":3,"file":"ButtonBase.jsx","sourceRoot":"","sources":["ButtonBase.tsx"],"names":[],"mappings":"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","sourcesContent":["import clsx from 'clsx'\nimport { MouseEvent, ReactNode, useRef } from 'react'\nimport { AiOutlineCheckCircle, AiOutlineExclamationCircle, AiOutlineLoading3Quarters } from 'react-icons/ai'\n\nimport { WithOptionalId, WithFixedHeightItemSize, WithBlock, WithActionState} from '../../shared/interfaces'\nimport { FixedHeightItemSizeStyles } from '../../shared/styles'\n\nconst ButtonTheme = {\n  primary: 'bg-primary text-white hover:brightness-150 active:brightness-75',\n  secondary: 'bg-white text-primary hover:bg-primary-light active:brightness-90 border border-dark',\n  transparent: 'bg-transparnet text-primary hover:bg-primary-light active:brightness-90',\n  disabled: 'bg-disabled text-deactivated',\n  success: 'bg-success text-white',\n  error: 'bg-warning text-white hover:brightness-110 active:brightness-90',\n  danger:'bg-danger text-white hover:brightness-110 active:brightness-90',\n}\n\nexport type ButtonType = 'primary' | 'secondary' | 'transparent'\n\n\n\nexport interface ButtonBaseProps extends WithOptionalId, WithFixedHeightItemSize, WithBlock, WithActionState {\n  type?: ButtonType\n  shape?: 'rounded' | 'circle'\n  success?: boolean\n  disabled?: boolean\n  danger?: boolean\n  icon?: ReactNode\n  iconPosition?: 'left' | 'right'\n  focusable?: boolean\n  children?: ReactNode | ReactNode[]\n  onClick?: (e?:MouseEvent) => any\n}\n\nexport default function ButtonBase(props: ButtonBaseProps) {\n  const {\n    id,\n    size = 'md',\n    block = false,\n    loading = false,\n    error = false,\n    type = 'secondary',\n    shape = 'rounded',\n    success = false,\n    disabled = false,\n    danger = false,\n    icon,\n    iconPosition = 'left',\n    focusable = false,\n    onClick,\n    children,\n  } = props\n\n  const circle = shape === 'circle'\n  const normalState = !loading && !success && !error && !disabled\n  const shouldInteract = !loading && !success && !disabled\n  const shouldOverWriteIcon = loading || success || error\n  const { squireSize, height, px, gap, fontSize, iconSize, roundCorner } = FixedHeightItemSizeStyles[size]\n\n  const buttonRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <div\n      id={id}\n      ref={buttonRef}\n      tabIndex={focusable && shouldInteract ? 0 : undefined}\n      className={clsx(\n        // basic\n        'flex flex-shrink-0 font-medium whitespace-nowrap justify-center items-center transition-all ease-out',\n        // sizing\n        circle || !children ? squireSize : [height, px],\n        block && !circle && !children && 'w-full',\n        circle ? 'rounded-full' : roundCorner,\n        fontSize,\n        gap,\n        // color\n        normalState && danger && ButtonTheme.danger,\n        normalState && !danger && ButtonTheme[type],\n        !normalState && (loading || disabled) && ButtonTheme.disabled,\n        !normalState && success && ButtonTheme.success,\n        !normalState && error && ButtonTheme.error,\n        // shadow\n        type !== 'transparent' && 'shadow-sm',\n        // interaction\n        shouldInteract\n          ? 'hover:cursor-pointer focus:outline-none focus:ring-2 focus:ring-highlight'\n          : 'hover:cursor-not-allowed'\n      )}\n      onClick={(e:MouseEvent) => {\n        e.preventDefault()\n        e.stopPropagation()\n        if (!shouldInteract) {\n          return\n        }\n        buttonRef.current?.classList.add('animate-signal')\n        buttonRef.current?.addEventListener('animationend', () => {\n          buttonRef.current?.classList.remove('animate-signal')\n        })\n        buttonRef.current?.blur()\n        onClick?.(e)\n      }}\n      onKeyDown={(e) => {\n        if (focusable && e.key === 'Enter' && shouldInteract) {\n          buttonRef.current?.blur()\n          onClick?.()\n        }\n      }}\n    >\n      {iconPosition === 'right' && shape!=='circle' && children}\n      {(shouldOverWriteIcon || icon) && (\n        <span className={clsx(iconSize, { 'animate-spin': loading })}>\n          {loading && <AiOutlineLoading3Quarters />}\n          {success && <AiOutlineCheckCircle />}\n          {error && <AiOutlineExclamationCircle />}\n          {!shouldOverWriteIcon && icon ? icon : null}\n        </span>\n      )}\n      {iconPosition === 'left'&& shape!=='circle' && children}\n    </div>\n  )\n}\n"]}