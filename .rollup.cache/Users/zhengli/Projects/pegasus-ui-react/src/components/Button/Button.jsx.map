{"version":3,"file":"Button.jsx","sourceRoot":"","sources":["Button.tsx"],"names":[],"mappings":";AAAA,OAAO,OAAO,MAAM,YAAY,CAAC;AACjC,OAAO,UAA+B,MAAM,cAAc,CAAC;AAO3D,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,KAAkB;IACxC,IAAA,QAAQ,GAAkC,KAAK,SAAvC,EAAE,QAAQ,GAAwB,KAAK,SAA7B,EAAK,eAAe,UAAI,KAAK,EAAhD,wBAAwC,CAAD,CAAS;IACtD,IAAG,QAAQ,EAAC,CAAC;QACX,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,EAAG,EAAE,OAAO,CAAC,CAAA;IACnG,CAAC;SAAI,CAAC;QACJ,OAAO,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,EAAG,CAAA;IAC5C,CAAC;AACH,CAAC","sourcesContent":["import Tooltip from \"../Tooltip\";\nimport ButtonBase, { ButtonBaseProps } from \"./ButtonBase\";\nimport { WithPlacement } from \"../../shared/interfaces\";\n\nexport interface ButtonProps extends ButtonBaseProps, WithPlacement{\n  tooltips?: string\n}\n\nexport default function Button(props: ButtonProps){\n  const {tooltips, position, ...bottonBaseProps} = props\n  if(tooltips){\n    return <Tooltip text={tooltips} position={position}><ButtonBase {...bottonBaseProps} /></Tooltip>\n  }else{\n    return <ButtonBase {...bottonBaseProps} />\n  }\n}"]}